<?php
/**
 * Created by PhpStorm.
 * User: Grigor
 * Date: 8/2/19
 * Time: 5:10 PM
 */

namespace App\Repository;

use App\Entity\Account;
use App\Entity\ContentUnit;
use Doctrine\ORM\EntityRepository;

/**
 * BoostedContentUnitRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class BoostedContentUnitRepository extends EntityRepository
{
    /**
     * @param ContentUnit $contentUnit
     * @return boolean
     */
    public function isContentUnitBoosted(ContentUnit $contentUnit)
    {
        $timezone = new \DateTimeZone('UTC');
        $date = new \DateTime();
        $date->setTimezone($timezone);

        $result = $this->createQueryBuilder('bcu')
            ->select('bcu')
            ->where('bcu.startTimePoint <= :date')
            ->andWhere('(bcu.startTimePoint + bcu.hours * 3600) >= :date')
            ->andWhere('bcu.contentUnit = :contentUnit')
            ->andWhere('bcu.cancelled = 0')
            ->setParameters(['date' => $date->getTimestamp(), 'contentUnit' => $contentUnit])
            ->getQuery()
            ->getResult();

        return ($result ? true: false);
    }

    /**
     * @param Account $author
     * @return boolean
     */
    public function getAuthorBoostedArticles(Account $author)
    {
        return $this->createQueryBuilder('bcu')
            ->select('bcu, cu, a')
            ->join('bcu.contentUnit', 'cu')
            ->join('bcu.sponsor', 'a')
            ->where('bcu.sponsor = :author')
            ->orWhere('cu.author = :author')
            ->andWhere('bcu.cancelled = 0')
            ->setParameters(['author' => $author])
            ->getQuery()
            ->getResult();
    }
}