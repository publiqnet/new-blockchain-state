<?php
/**
 * Created by PhpStorm.
 * User: Grigor
 * Date: 3/2/20
 * Time: 7:34 PM
 */

namespace App\Repository;

use Doctrine\ORM\EntityRepository;

/**
 * FileRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom repository methods below.
 */
class FileRepository extends EntityRepository
{
    /**
     * @param null $channelAddress
     * @return array|null
     */
    public function getCoverFilesWithoutThumbnails($channelAddress = null)
    {
        if ($channelAddress) {
            return $this->createQueryBuilder('f')
                ->select('f')
                ->join('f.covers', 'cu')
                ->join('cu.channel', 'ch')
                ->where('f.mimeType in (\'image/png\', \'image/jpeg\')')
                ->andWhere('f.thumbnail is null')
                ->andWhere('ch.publicKey = :address')
                ->setParameters(['address' => $channelAddress])
                ->groupBy('f.id')
                ->getQuery()
                ->getResult();
        } else {
            return $this->createQueryBuilder('f')
                ->select('f')
                ->join('f.covers', 'cu')
                ->where('f.mimeType in (\'image/png\', \'image/jpeg\')')
                ->andWhere('f.thumbnail is null')
                ->groupBy('f.id')
                ->getQuery()
                ->getResult();
        }
    }

    /**
     * @param int $count
     * @return array|null
     */
    public function getFocccusCoverThumbnails($count = 50)
    {
        return $this->createQueryBuilder('f')
            ->select('f')
            ->where('f.thumbnail is not null')
            ->groupBy('f.id')
            ->setMaxResults($count)
            ->orderBy('RAND()')
            ->getQuery()
            ->getResult();
    }
}