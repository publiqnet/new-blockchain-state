<?php
/**
 * Created by PhpStorm.
 * User: Grigor
 * Date: 11/21/19
 * Time: 3:56 PM
 */

namespace App\Repository;

use App\Entity\File;
use Doctrine\ORM\EntityRepository;

/**
 * FileRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom repository methods below.
 */
class FileRepository extends EntityRepository
{
    /**
     * @return array|null
     */
    public function getCoverFilesWithoutThumbnails()
    {
        $query = $this->createQueryBuilder('f');

        return $query->select('f')
            ->join('f.covers', 'cu')
            ->where('f.mimeType in (\'image/png\', \'image/jpeg\')')
            ->andWhere('f.thumbnail is null')
            ->groupBy('f.id')
            ->getQuery()
            ->getResult();
    }

    /**
     * @param int $count
     * @param File|null $fromFile
     * @return array|null
     */
    public function getImages(int $count = 10, File $fromFile = null)
    {
        if ($fromFile) {
            return $this->createQueryBuilder('f')
                ->select('f')
                ->join('f.contentUnits', 'cu')
                ->where('f.mimeType != :mimeType')
                ->andWhere('f.id < :fromId')
                ->setParameters(['mimeType' => 'text/html', 'fromId' => $fromFile->getId()])
                ->setMaxResults($count)
                ->orderBy('f.id', 'desc')
                ->getQuery()
                ->getResult();
        } else {
            return $this->createQueryBuilder('f')
                ->select('f')
                ->join('f.contentUnits', 'cu')
                ->where('f.mimeType != :mimeType')
                ->setParameters(['mimeType' => 'text/html'])
                ->setMaxResults($count)
                ->orderBy('f.id', 'desc')
                ->getQuery()
                ->getResult();
        }
    }
}
